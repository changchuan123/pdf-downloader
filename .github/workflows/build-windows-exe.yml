name: Build Windows EXE

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build Windows executable
      run: pyinstaller pdf_downloader_win.spec --clean
        
    - name: Test executable
      run: |
        if (Test-Path "dist/PDF下载器.exe") {
          Write-Host "✅ exe文件生成成功"
          Get-ItemProperty "dist/PDF下载器.exe" | Select-Object Name, Length
        } else {
          Write-Host "❌ exe文件未找到"
          exit 1
        }
      shell: pwsh
      
    - name: Create release package
      run: |
        New-Item -ItemType Directory -Path "release" -Force
        Copy-Item "dist/PDF下载器.exe" "release/" -Force
        Copy-Item "test_urls.xlsx" "release/" -Force -ErrorAction SilentlyContinue
        Copy-Item "urls.xlsx" "release/" -Force -ErrorAction SilentlyContinue
        
        $readmeContent = "PDF下载器 Windows版使用说明`n============================`n`n使用方法：`n1. 将 PDF下载器.exe 和 Excel文件放在同一文件夹`n2. 双击运行 PDF下载器.exe`n3. 下载的文件会保存在 pdf_dl 文件夹中`n`nExcel文件要求：`n- 文件名：urls.xlsx 或 test_urls.xlsx`n- 第一列：PDF下载链接`n- 第二列：文件名（可选）`n`n注意事项：`n- 如果杀毒软件误报，请添加到白名单`n- 确保网络连接正常`n- 程序支持并发下载，请耐心等待`n`n生成时间：$(Get-Date)"
        
        $readmeContent | Out-File -FilePath "release/README.txt" -Encoding UTF8
        
        Write-Host "发布包内容："
        Get-ChildItem "release"
      shell: pwsh
      
    - name: Create ZIP package
      run: |
        Compress-Archive -Path "release/*" -DestinationPath "PDF下载器-Windows-v$(Get-Date -Format 'yyyyMMdd-HHmm').zip"
        Write-Host "ZIP包已创建："
        Get-ChildItem "*.zip"
      shell: pwsh
      
    - name: Upload Windows executable
      uses: actions/upload-artifact@v4
      with:
        name: PDF下载器-Windows-exe
        path: release/
        retention-days: 30
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: github.ref == 'refs/heads/main'
      with:
        tag_name: v${{ github.run_number }}
        name: PDF下载器 Windows版 v${{ github.run_number }}
        body: |
          ## PDF批量下载器 Windows版
          
          ### 🎉 新功能
          - 独立的Windows可执行文件，无需Python环境
          - 支持Excel和TXT格式的URL列表
          - 并发下载，提高效率
          - 自动处理文件名冲突
          
          ### 📁 包含文件
          - PDF下载器.exe - 主程序
          - test_urls.xlsx - 测试URL文件
          - urls.xlsx - URL模板文件
          - README.txt - 使用说明
          
          ### 🚀 使用方法
          1. 下载并解压ZIP文件
          2. 将Excel文件和exe放在同一文件夹
          3. 双击运行PDF下载器.exe
          
          构建时间：${{ github.run_id }}
        files: |
          PDF下载器-Windows-v*.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload build logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-logs
        path: |
          build/
          *.log
        retention-days: 7 